/*          <-----------Kamlesh Singh Bisht----------->         */

// #pragma GCC target ("avx2")
// #pragma GCC optimization ("O3")
// #pragma GCC optimization ("unroll-loops")
// #pragma comment(linker, "/STACK: 128000000")
 
#include <bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
 
using namespace std;
using namespace __gnu_pbds;
 
#define f first
#define endl '\n'
#define s second
#define pb push_back
#define md 998244353
#define int long long
#define vi vector<int>
#define mod 1000000007
#define inf 1999999999999999999
#define vp vector<pair<int,int>>
#define all(c) c.begin(),c.end()
#define rall(c) c.rbegin(),c.rend()
#define in(a) for(auto &i:a)cin>>i
#define dbg(x) cout<<#x<<"->"<<x<<endl
#define mem(a,val) memset(a,val,sizeof(a))
#define out(a)for(auto i:a)cout<<i<<" ";cout<<endl
#define ebg(x,y) cout<<#x<<"->"<<x<<" "<<#y<<"->"<<y<<endl
// typedef tree<int, null_type, greater_equal<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;
typedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag, tree_order_statistics_node_update> pbds;
 
// set -> less, greater , multiset -> less_equal , greater_equal
// // pbds.order_of_key (k) : Number of items strictly smainter than k.
//*pbds.find_by_order(k) : K-th element in a set (cnting from zero).
 
/*-----------------------------------------------------------------------------------------------------------------------------------*/
 
int expo(int a, int b, int m) {int res = 1; while (b > 0) {if (b & 1)res = (res * a) % m; a = (a * a) % m; b = b >> 1;} return res;}
int modInv(int a, int m) {return expo(a, m - 2, m);}
int ncr(int n, int r, int m, vi& fact, vi& inv) {return (((fact[n] % m * inv[n - r] % m) % m) * (inv[r] % m)) % m;}
int npr(int n, int r, int m, vi& fact, vi& inv) {return (((fact[n] % m) * (inv[n - r] % m)) % m);}
vector<int> sieve(int n) {int*a = new int[n + 1](); vector<int> vect; for (int i = 2; i <= n; i++)if (a[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)a[j] = 1;} return vect;}
void yes(int x = 0) {if (!x)cout << "Yes" << endl; else cout << "YES" << endl;}
void no(int x = 0)  {if (x)cout << "NO" << endl; else cout << "No" << endl;}
 
/*-----------------------------------------------------------------------------------------------------------------------------------*/
 

/*
                        -                      
                        Focus on little things.
                        Big things will take care of themselves.
                        -
*/

void solve()
{


}

int32_t main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);

	int t = 1;
	cin >> t;
	while (t--) {
		solve();
	}

	return 0;
}

/*
-
                        
                        Don't let that determined fresher down,
                        that you once were.
                        
*/
